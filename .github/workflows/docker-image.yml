name: Build and Deploy Docker Image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    - name: Install GitVersion
      run: |
        dotnet tool install --global GitVersion.Tool

    - name: Check GitVersion Version
      run: dotnet-gitversion /version

    - name: Run GitVersion
      id: gitversion
      run: dotnet-gitversion /output json /showvariable SemVer

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: productcatalogmanagerapicontainerregistry.azurecr.io
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

    - name: Build and push Docker images
      run: |
        docker build -t productcatalogmanagerapicontainerregistry.azurecr.io/productcatalogmanagerapi:latest -f Api/Dockerfile .
        docker push productcatalogmanagerapicontainerregistry.azurecr.io/productcatalogmanagerapi:latest

    - name: Log out from Azure Container Registry
      run: docker logout productcatalogmanagerapicontainerregistry.azurecr.io

    - name: Update database
      run: |
        dotnet tool install --global dotnet-ef
        dotnet tool restore
        dotnet ef database update -c DataContext -p Infrastructure/Infrastructure.csproj -s Api/Api.csproj
      env:
        ASPNETCORE_ENVIRONMENT: Production
